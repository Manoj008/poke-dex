{"version":3,"sources":["components/pokemon/Pokemons.js","services/Services.js","components/pokemon/PokemonList.js","components/pokemon/Evolve.js","components/pokemon/Ability.js","components/pokemon/Type.js","components/pokemon/Stat.js","components/pokemon/PokemonDetails.js","components/pokemon/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["getPokemonsName","name","pokemons","map","p","to","pathname","key","id","Card","className","Title","Img","src","sprites","front_default","alt","toUpperCase","Pokemons","Container","Row","style","justifyContent","getAllPokemons","url","a","Promise","resolve","reject","fetch","then","res","json","data","catch","message","console","log","getPokemonsData","all","pokemon","getPokemon","_PokemonsData","getSpecies","specie","getEvolution","path","getEvolutionChain","chain","c","species_name","_evoData","getAllAbilities","abilities","getOneAbility","ability","_allAbilities","PokemonList","useState","setPokemons","currUrl","setCurrUrl","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","useEffect","response","next","previous","results","pokemonsData","fetchData","margin","Button","disabled","onClick","getEvo","evolution","evo","index","Evolve","textAlign","marginLeft","Ability","setAbility","show","setShow","setName","summ","setSumm","eff","setEff","one","summary","effect","flavor_text_entries","language","flavor_text","effect_entries","det","newAbility","prevAbility","fetchAbilities","handleClose","myAbility","Col","xs","sm","md","lg","xl","cursor","handleShow","fontSize","Modal","onHide","Header","closeButton","Body","getAbility","getType","types","typeColor","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","unknown","shadow","type","backgroundImage","color","Type","getStats","stats","setData","s","stat","padding","base_stat","Stat","PokemonDetails","props","setPokemon","setSpecies","setEvolution","pokeDetails","setPokeDetails","history","useHistory","location","pokemonData","species","spec","fl","evolution_chain","evolve","evoData","numberOfEvolutions","length","push","min_level","i","evolves_to","hasOwnProperty","evoChain","other","backgroundColor","borderRadius","height","weight","NavBar","keyword","setKeyword","width","background","border","value","placeholder","onChange","e","target","onKeyDownCapture","App","basename","window","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89863ccf.chunk.js","sourcesContent":["import './Pokemons.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card, Container, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction getPokemonsName(name, pokemons) {\r\n    return (\r\n        pokemons.map((p, name) =>\r\n            // <Col style={{ padding: 0 }}>\r\n            <Link to={{ pathname: '/pokemon/' + p.name, key: p.id }} >\r\n                <Card className='center'>\r\n                    <Card.Title className='_rank'>{'#' + p.id}</Card.Title>\r\n                    <Card.Img className='image' src={p.sprites.front_default} alt={p.name} />\r\n                    <Card.Title className='_name'>{p.name.toUpperCase()}</Card.Title>\r\n                </Card>\r\n            </Link>\r\n\r\n            // </Col>\r\n        )\r\n    )\r\n};\r\n\r\nfunction Pokemons({ name, pokemons }) {\r\n    return (\r\n        <Container >\r\n            <Row style={{ justifyContent: 'center' }}>\r\n                {getPokemonsName(name, pokemons)}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Pokemons;","export async function getAllPokemons(url) {\r\n    return new Promise((resolve, reject) => {\r\n        let isActive = true;\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n\r\n        return () => { isActive = false; };\r\n    });\r\n};\r\n\r\nexport async function getPokemonsData(pokemons) {\r\n    let _PokemonsData = await Promise.all(\r\n        pokemons.map(\r\n            async pokemon => {\r\n                return getPokemon(pokemon.url)\r\n            }\r\n        )\r\n    );\r\n\r\n    return _PokemonsData;\r\n\r\n};\r\n\r\nexport async function getPokemon(pokemon) {\r\n    return new Promise((resolve, reject) =>\r\n        fetch(pokemon)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            })\r\n    );\r\n};\r\n\r\nexport async function getSpecies(specie) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(specie)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n    });\r\n};\r\n\r\nexport async function getEvolution(path) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(path)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n    });\r\n};\r\n\r\nexport async function getEvolutionChain(chain) {\r\n    let _evoData = await Promise.all(\r\n        chain.map(\r\n            async c => {\r\n                return getPokemon('https://pokeapi.co/api/v2/pokemon/' + c.species_name)\r\n            }\r\n        )\r\n    );\r\n    return _evoData;\r\n\r\n};\r\n\r\nexport async function getAllAbilities(abilities) {\r\n    console.log(\"async call \" + abilities);\r\n    let _allAbilities = await Promise.all(\r\n        abilities.map(\r\n            async a => {\r\n                return getOneAbility(a.ability.url);\r\n            }\r\n        )\r\n    )\r\n    return _allAbilities;\r\n\r\n};\r\n\r\nasync function getOneAbility(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n\r\n    });\r\n};","import './Pokemons.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport Pokemons from './Pokemons';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { getAllPokemons, getPokemonsData } from '../../services/Services';\r\n\r\n\r\nfunction PokemonList() {\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [currUrl, setCurrUrl] = useState('https://pokeapi.co/api/v2/pokemon/?limit=30');\r\n    const [nextUrl, setNextUrl] = useState('');\r\n    const [prevUrl, setPrevUrl] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            let response = await getAllPokemons(currUrl);\r\n            setNextUrl(response.next);\r\n            setPrevUrl(response.previous);\r\n            let pokemonsData = await getPokemonsData(response.results);\r\n            setPokemons(pokemonsData);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [currUrl]);\r\n\r\n    function nextPage() {\r\n        setCurrUrl(nextUrl);\r\n    };\r\n\r\n    function prevPage() {\r\n        setCurrUrl(prevUrl);\r\n    }\r\n\r\n\r\n    return (\r\n        <Container >\r\n            {loading ? <h4 style={{ margin: 'auto' }}> Loading Pokemons...</h4> :\r\n                <div style={{ justifyContent: 'center' }}>\r\n                    <Pokemons key={pokemons.name} pokemons={pokemons} />\r\n                    <Button disabled={!prevUrl} className='btnStyle' onClick={prevPage}>Previous</Button>\r\n                    <Button disabled={!nextUrl} className='btnStyle' onClick={nextPage}>Next</Button>\r\n                </div>\r\n            }\r\n        </Container>)\r\n};\r\n\r\nexport default PokemonList;","import React from 'react';\r\nimport { Card, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './Pokemons.css';\r\n\r\nfunction getEvo(evolution) {\r\n    return (\r\n        evolution.map((evo, index) =>\r\n            <div className='evo-item '>\r\n                <Link to={{ pathname: '/pokemon/' + evo.name, key: evo.id }}>\r\n                    <Card.Img src={evo.sprites.front_default} alt={evo.name} className='evo-img' />\r\n                    <h5 className='evo-name'>{evo.name.toUpperCase()}</h5>\r\n                </Link>\r\n            </div >\r\n        )\r\n    );\r\n};\r\n\r\nfunction Evolve({ evolution }) {\r\n    return (\r\n        <div >\r\n            <h3 style={{ textAlign: 'left', marginLeft: '30px' }}>Evolutions</h3>\r\n            <Row style={{ justifyContent: 'center' }} className='evo-chart no-gutters' >\r\n                {getEvo(evolution)}\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Evolve;","import React, { useEffect, useState } from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllAbilities } from '../../services/Services';\r\nimport './Pokemons.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nfunction Ability({ abilities }) {\r\n    const [ability, setAbility] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [summ, setSumm] = useState('');\r\n    const [eff, setEff] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchAbilities() {\r\n            const allAbilities = await getAllAbilities(abilities);\r\n            allAbilities.map((one, index) => {\r\n                let name = one.name;\r\n                let summary = '';\r\n                let effect = '';\r\n                one.flavor_text_entries.map((summ, index) => {\r\n                    if (summ.language.name === 'en') {\r\n                        summary = summ.flavor_text;\r\n                    }\r\n                });\r\n                one.effect_entries.map((det, index) => {\r\n                    if (det.language.name === 'en') {\r\n                        effect = det.effect;\r\n                    }\r\n                });\r\n\r\n                let newAbility = {\r\n                    id: name, name: name, summary: summary, effect: effect\r\n\r\n                }\r\n                setAbility(prevAbility => ([...prevAbility, newAbility]));\r\n            });\r\n        }\r\n        fetchAbilities();\r\n    }, []);\r\n\r\n    function getAbility(abilities) {\r\n\r\n        const handleClose = () => {\r\n            setShow(false);\r\n        };\r\n        const handleShow = (index) => {\r\n            console.log('in' + index);\r\n            setName(ability[index].name);\r\n            setSumm(ability[index].summary);\r\n            setEff(ability[index].effect);\r\n            setShow(true);\r\n        };\r\n\r\n        return (\r\n            abilities.map((myAbility, index) =>\r\n                <>\r\n\r\n                    <Col xs='12' sm='6' md='12' lg='6' xl='6' style={{ cursor: 'pointer' }} onClick={() => handleShow(index)}>\r\n                        <h5 className='ability-style'>{myAbility.ability.name + ' '}<i className='fa fa-info-circle' style={{ fontSize: '0.8rem' }}></i></h5>\r\n                    </Col>\r\n\r\n                    <Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{name}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Header>\r\n                            <Modal.Body>{summ}</Modal.Body>\r\n                        </Modal.Header>\r\n                        <Modal.Header>\r\n                            <Modal.Body>{eff}</Modal.Body>\r\n                        </Modal.Header>\r\n                    </Modal>\r\n                </>\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4 style={{ textAlign: 'left', marginLeft: '10px' }}>Abilities</h4>\r\n            <Row className='no-gutters'>\r\n                {getAbility(abilities)}\r\n            </Row>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Ability;","import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport './Pokemons.css';\r\n\r\nfunction getType(types) {\r\n    var typeColor = {\r\n        normal: 'linear-gradient(#A4ACAF 100%,transparent)',\r\n        fighting: 'linear-gradient(#D56723 100%,transparent)',\r\n        flying: 'linear-gradient(to bottom,#3DC7EF 50%, #BDB9B8 50%)',\r\n        poison: 'linear-gradient(#B97FC9 100%,transparent)',\r\n        ground: 'linear-gradient(to bottom,#F7DE3F 50%, #AB9842 50%)',\r\n        rock: 'linear-gradient(#A38C21 100%,transparent)',\r\n        bug: 'linear-gradient(#729F3F 100%,transparent)',\r\n        ghost: 'linear-gradient(#7B62A3 100%,transparent)',\r\n        steel: 'linear-gradient(#9EB7B8 100%,transparent)',\r\n        fire: 'linear-gradient(#FD7D24 100%,transparent)',\r\n        water: 'linear-gradient(#4592C4 100%,transparent)',\r\n        grass: 'linear-gradient(#9BCC50 100%,transparent)',\r\n        electric: 'linear-gradient(#EED535 100%,transparent)',\r\n        psychic: 'linear-gradient(#F366B9 100%,transparent)',\r\n        ice: 'linear-gradient(#51C4E7 100%,transparent)',\r\n        dragon: 'linear-gradient(to bottom,#53A4CF 50%, #F16E57 50%)',\r\n        dark: 'linear-gradient(#717171 100%,transparent)',\r\n        fairy: 'linear-gradient(#FDB9E9 100%,transparent)',\r\n        unknown: 'linear-gradient(#000 100%,transparent)',\r\n        shadow: 'linear-gradient(#000 100%,transparent)'\r\n    };\r\n\r\n    return (\r\n        types.map((type, index) =>\r\n            <Col xs='6' sm='6' md='6' lg='6' xl='6'>\r\n                <h5 className='ability-style' style={{ backgroundImage: typeColor[type.type.name], color: 'white' }} key={type.type.name}>{type.type.name}</h5>\r\n            </Col>\r\n\r\n        )\r\n    );\r\n};\r\n\r\nfunction Type({ types }) {\r\n    return (\r\n        <div>\r\n            <h4 style={{ textAlign: 'left', marginLeft: '10px' }}>Type</h4>\r\n            <Row className='no-gutters'>\r\n                {getType(types)}\r\n            </Row>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Type;","import { Col, Row } from \"react-bootstrap\";\r\nimport React, { useState } from 'react';\r\nimport PokemonDetails from \"./PokemonDetails\";\r\nimport './Pokemons.css';\r\nimport BarChart from './BarChart'\r\n\r\nfunction getStats(stats, data, setData) {\r\n    return (\r\n        stats.map((s, index) => {\r\n            return (\r\n\r\n                (s.stat.name !== 'special-attack' && s.stat.name !== 'special-defense') &&\r\n                (\r\n                    <>\r\n                        <Col className='stat-row'>\r\n                            {console.log(s.stat.name)}\r\n                            <h6 className='stat-col'>{s.stat.name}</h6>\r\n                            <p style={{ padding: '0rem', margin: '0rem 0rem 0.4rem' }}>{s.base_stat}</p>\r\n                        </Col >\r\n                        {/* {() => setData([s.base_stat])} */}\r\n                    </>\r\n\r\n                )\r\n            )\r\n        })\r\n        // return (\r\n        //     <BarChart data={data} />\r\n    )\r\n};\r\n\r\nfunction Stat({ stats }) {\r\n    const [data, setData] = useState([]);\r\n    // getStats(stats, data, setData);\r\n    return (\r\n        <Row className='no-gutters stat-row stat' >\r\n            {getStats(stats, data, setData)}\r\n            {/* <BarChart data={data} /> */}\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Stat;","import { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport './Pokemons.css';\r\nimport { getPokemon, getSpecies, getEvolution, getEvolutionChain } from \"../../services/Services\";\r\nimport Evolve from './Evolve';\r\nimport Ability from './Ability';\r\nimport Type from './Type';\r\nimport Stat from './Stat';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction PokemonDetails(props) {\r\n    const [pokemon, setPokemon] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [species, setSpecies] = useState([]);\r\n    const [evolution, setEvolution] = useState([]);\r\n    const [pokeDetails, setPokeDetails] = useState('');\r\n\r\n    var history = useHistory();\r\n    const path = \"https://pokeapi.co/api/v2\" + props.location.pathname;\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        async function fetchData() {\r\n            let pokemonData = await getPokemon(path);\r\n            setPokemon(pokemonData);\r\n            let spec = await getSpecies(pokemonData.species.url);\r\n            setSpecies(spec);\r\n\r\n            spec.flavor_text_entries.map((fl, index) => {\r\n                if (fl.language.name === 'en') {\r\n                    setPokeDetails(fl.flavor_text);\r\n                }\r\n            })\r\n            let evolve = await getEvolution(spec.evolution_chain.url);\r\n            let chain = [];\r\n            let evoData = evolve.chain;\r\n            do {\r\n                let numberOfEvolutions = evoData['evolves_to'].length;\r\n\r\n                chain.push({\r\n                    \"species_name\": evoData.species.name,\r\n                    \"min_level\": !evoData ? 1 : evoData.min_level,\r\n                });\r\n\r\n                if (numberOfEvolutions > 1) {\r\n                    for (let i = 1; i < numberOfEvolutions; i++) {\r\n                        chain.push({\r\n                            \"species_name\": evoData.evolves_to[i].species.name,\r\n                            \"min_level\": !evoData.evolves_to[i] ? 1 : evoData.evolves_to[i].min_level,\r\n\r\n                        });\r\n                    }\r\n                }\r\n                evoData = evoData['evolves_to'][0];\r\n            } while (!!evoData && evoData.hasOwnProperty('evolves_to'));\r\n\r\n            var e = [];\r\n            const evoChain = await getEvolutionChain(chain);\r\n            setEvolution(evoChain);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [path]);\r\n\r\n    const handlePrevSubmit = () => {\r\n        history.push('/pokemon/' + (pokemon.id - 1));\r\n    }\r\n\r\n    const handleNextSubmit = () => {\r\n        history.push('/pokemon/' + (pokemon.id + 1));\r\n    }\r\n\r\n    return (\r\n        loading ? <h3> Loading.. </h3> : (\r\n            <Card >\r\n                <Row className='no-gutters' style={{ justifyContent: 'center' }}>\r\n                    <Col>\r\n                        <Button className='btn-info btn-block' onClick={handlePrevSubmit}><i className='fa fa-arrow-left'></i>{'#' + (pokemon.id - 1)}</Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3 style={{ margin: '1rem', textAlign: 'center' }}> {pokemon.name.toUpperCase() + '  '}<span style={{ color: \"grey\" }}> {'#' + pokemon.id}</span> </h3>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button className='btn-info btn-block' onClick={handleNextSubmit}>{'#' + (pokemon.id + 1)}<i className='fa fa-arrow-right'></i></Button>\r\n                    </Col>\r\n                </Row >\r\n                <Row>\r\n                    <Col className='comp-data'>\r\n                        <Card.Img className='full-image' src={pokemon.sprites.other[\"official-artwork\"][\"front_default\"]} />\r\n                        {/* <Card.Img xs='4' className='full-image' src={pokemon.sprites.other[\"dream_world\"][\"front_default\"]} /> */}\r\n                        <Stat stats={pokemon.stats} />\r\n                    </Col >\r\n                    <Col className='comp-data'>\r\n                        <div style={{ justifyContent: 'center' }}>\r\n\r\n\r\n                            <h6 style={{ margin: '1rem 0.5rem' }} className='poke-details'>{pokeDetails}</h6>\r\n\r\n                            <Row style={{ justifyContent: 'center', margin: '0.5rem', backgroundColor: 'steelblue', color: 'white', borderRadius: '0.3rem' }}>\r\n                                <h5 style={{ margin: '0.5rem auto' }}>{'Height: ' + pokemon.height}</h5>\r\n                                <h5 style={{ margin: '0.5rem auto' }}>{'Weight: ' + pokemon.weight}</h5>\r\n                            </Row>\r\n                            <Ability abilities={pokemon.abilities} />\r\n                            <Type types={pokemon.types} />\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row >\r\n                <Evolve evolution={evolution} />\r\n            </Card >\r\n        )\r\n    );\r\n};\r\n\r\nexport default PokemonDetails;","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nfunction NavBar({ keyword, setKeyword }) {\r\n    const BarStyling = { width: \"10rem\", background: \"lightgrey\", color: 'black', border: \"none\", padding: \"0.5rem\" };\r\n    var history = useHistory();\r\n\r\n    return (\r\n        <div style={{ backgroundColor: 'black' }}>\r\n            <input\r\n                style={BarStyling}\r\n                key=\"random1\"\r\n                value={keyword}\r\n                placeholder={\"Enter Rank or Name\"}\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                onKeyDownCapture={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        history.push('/pokemon/' + keyword);\r\n                        e.target.value = ''\r\n                    }\r\n                }\r\n                }\r\n            />\r\n            <Link to={{ pathname: '/pokemon/' + keyword, key: keyword }} >\r\n                <button style={{ padding: '0.4rem' }}><i className='fa fa-search'></i></button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport PokemonList from './components/pokemon/PokemonList.js';\nimport PokemonDetails from './components/pokemon/PokemonDetails';\nimport Evolve from './components/pokemon/Evolve';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/pokemon/NavBar';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [keyword, setKeyword] = useState('');\n\n  const style1 = {\n    color: 'white',\n    backgroundColor: 'red',\n    margin: '0px',\n    padding: '0px'\n  };\n\n\n\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <Container className='App' style={{ padding: 0 }}>\n        <h2 style={style1}>Welcome to Poke-dex.</h2>\n        <NavBar keyword={keyword} setKeyword={setKeyword} />\n        <Switch>\n          <Route path='/' exact component={PokemonList} />\n          <Route path='/pokemon/:name' component={PokemonDetails} />\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}