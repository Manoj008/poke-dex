{"version":3,"sources":["components/pokemon/Pokemons.js","services/Services.js","components/pokemon/PokemonList.js","components/pokemon/Evolve.js","components/pokemon/Ability.js","components/pokemon/Type.js","components/pokemon/Stat.js","components/pokemon/PokemonDetails.js","components/pokemon/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["getPokemonsName","pokemons","map","p","index","to","pathname","name","key","id","Card","className","Title","Img","src","sprites","alt","toUpperCase","Pokemons","Container","Row","style","justifyContent","getAllPokemons","url","a","Promise","resolve","reject","fetch","then","res","json","data","catch","message","console","log","getPokemonsData","all","pokemon","getPokemon","_PokemonsData","e","getSpecies","specie","getEvolution","path","getEvolutionChain","chain","c","species_name","_evoData","getAllAbilities","abilities","getOneAbility","ability","_allAbilities","PokemonList","useState","setPokemons","currUrl","setCurrUrl","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","useEffect","response","next","previous","results","pokemonsData","fetchData","margin","paddingBottom","Button","disabled","onClick","getEvo","evolution","evo","front_default","Evolve","textAlign","marginLeft","Ability","setAbility","show","setShow","setName","summ","setSumm","eff","setEff","one","summary","effect","flavor_text_entries","language","flavor_text","effect_entries","det","newAbility","prevAbility","fetchAbilities","handleClose","myAbility","Col","xs","sm","md","lg","xl","cursor","handleShow","fontSize","Modal","onHide","width","Header","closeButton","Body","getAbility","getType","types","typeColor","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","unknown","shadow","type","backgroundImage","color","Type","getStats","stats","setData","s","stat","padding","base_stat","Stat","PokemonDetails","props","setPokemon","setSpecies","setEvolution","pokeDetails","setPokeDetails","prevBtn","setPrevBtn","failed","setFailed","history","useHistory","location","pokemonData","species","spec","fl","evolution_chain","evolve","evoData","numberOfEvolutions","length","push","min_level","i","evolves_to","hasOwnProperty","evoChain","backgroundColor","other","borderRadius","height","weight","SearchBar","keyword","setKeyword","pokemonsName","setPokemonsName","suggestions","setSuggestions","search","setSearch","names","marginBottom","value","placeholder","onChange","target","suggest","regex","RegExp","sort","filter","v","test","onKeyDownCapture","toLowerCase","item","App","basename","window","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.431bc983.chunk.js","sourcesContent":["import './Pokemons.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card, Container, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction getPokemonsName(pokemons) {\r\n    return (\r\n        pokemons.map((p, index) =>\r\n            // <Col style={{ padding: 0 }}>\r\n            <Link to={{ pathname: '/pokemon/' + p.name, key: p.id }} >\r\n                <Card className='center'>\r\n                    <Card.Title className='_rank'>{'#' + p.id}</Card.Title>\r\n                    <Card.Img className='image' src={p.sprites['front_default']} alt={p.name} />\r\n                    <Card.Title className='_name'>{p.name.toUpperCase()}</Card.Title>\r\n                </Card>\r\n            </Link>\r\n\r\n            // </Col>\r\n        )\r\n    )\r\n};\r\n\r\nfunction Pokemons({ pokemons }) {\r\n    return (\r\n        <Container >\r\n            <Row style={{ justifyContent: 'center' }}>\r\n                {getPokemonsName(pokemons)}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Pokemons;","export async function getAllPokemons(url) {\r\n    return new Promise((resolve, reject) => {\r\n        let isActive = true;\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n\r\n        return () => { isActive = false; };\r\n    });\r\n};\r\n\r\nexport async function getPokemonsData(pokemons) {\r\n    let _PokemonsData = await Promise.all(\r\n        pokemons.map(\r\n            async pokemon => {\r\n                return getPokemon(pokemon.url)\r\n            }\r\n        )\r\n    );\r\n\r\n    return _PokemonsData;\r\n\r\n};\r\n\r\nexport async function getPokemon(pokemon) {\r\n    return new Promise((resolve, reject) =>\r\n        fetch(pokemon)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n            }).catch((e) => {\r\n                resolve(404);\r\n            })\r\n    );\r\n};\r\n\r\nexport async function getSpecies(specie) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(specie)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n    });\r\n};\r\n\r\nexport async function getEvolution(path) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(path)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n    });\r\n};\r\n\r\nexport async function getEvolutionChain(chain) {\r\n    let _evoData = await Promise.all(\r\n        chain.map(\r\n            async c => {\r\n                return getPokemon('https://pokeapi.co/api/v2/pokemon/' + c.species_name)\r\n            }\r\n        )\r\n    );\r\n    return _evoData;\r\n\r\n};\r\n\r\nexport async function getAllAbilities(abilities) {\r\n    console.log(\"async call \" + abilities);\r\n    let _allAbilities = await Promise.all(\r\n        abilities.map(\r\n            async a => {\r\n                return getOneAbility(a.ability.url);\r\n            }\r\n        )\r\n    )\r\n    return _allAbilities;\r\n\r\n};\r\n\r\nasync function getOneAbility(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n\r\n    });\r\n};","import './Pokemons.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport Pokemons from './Pokemons';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { getAllPokemons, getPokemonsData } from '../../services/Services';\r\n\r\n\r\nfunction PokemonList() {\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [currUrl, setCurrUrl] = useState('https://pokeapi.co/api/v2/pokemon/?limit=30');\r\n    const [nextUrl, setNextUrl] = useState('');\r\n    const [prevUrl, setPrevUrl] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            let response = await getAllPokemons(currUrl);\r\n            setNextUrl(response.next);\r\n            setPrevUrl(response.previous);\r\n            let pokemonsData = await getPokemonsData(response.results);\r\n            setPokemons(pokemonsData);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [currUrl]);\r\n\r\n    function nextPage() {\r\n        setCurrUrl(nextUrl);\r\n    };\r\n\r\n    function prevPage() {\r\n        setCurrUrl(prevUrl);\r\n    }\r\n\r\n    return (\r\n        <Container >\r\n            {loading ? <h4 style={{ margin: 'auto' }}> Loading Pokemons...</h4> :\r\n                <div style={{ justifyContent: 'center' }}>\r\n                    <Pokemons key={pokemons.name} pokemons={pokemons} />\r\n                    <hr style={{ paddingBottom: '0rem' }} />\r\n                    <div>\r\n                        <Button disabled={!prevUrl} className='btnStyle' onClick={prevPage}>Previous</Button>\r\n                        <Button disabled={!nextUrl} className='btnStyle' onClick={nextPage}>Next</Button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </Container>)\r\n};\r\n\r\nexport default PokemonList;","import React from 'react';\r\nimport { Card, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './Pokemons.css';\r\n\r\nfunction getEvo(evolution) {\r\n    return (\r\n        evolution.map((evo, index) =>\r\n            <div className='evo-item '>\r\n                <Link to={{ pathname: '/pokemon/' + evo.name, key: evo.id }}>\r\n                    <Card.Img src={evo.sprites.front_default} alt={evo.name} className='evo-img' />\r\n                    <h5 className='evo-name'>{evo.name.toUpperCase()}</h5>\r\n                </Link>\r\n            </div >\r\n        )\r\n    );\r\n};\r\n\r\nfunction Evolve({ evolution }) {\r\n    return (\r\n        <div >\r\n            <h3 style={{ textAlign: 'left', marginLeft: '30px' }}>Evolutions</h3>\r\n            <Row style={{ justifyContent: 'center' }} className='evo-chart no-gutters' >\r\n                {getEvo(evolution)}\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Evolve;","import React, { useEffect, useState } from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllAbilities } from '../../services/Services';\r\nimport './Pokemons.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nfunction Ability({ abilities }) {\r\n    const [ability, setAbility] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [summ, setSumm] = useState('');\r\n    const [eff, setEff] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchAbilities() {\r\n            const allAbilities = await getAllAbilities(abilities);\r\n            allAbilities.map((one, index) => {\r\n                let name = one.name;\r\n                let summary = '';\r\n                let effect = '';\r\n                one.flavor_text_entries.map((summ, index) => {\r\n                    if (summ.language.name === 'en') {\r\n                        summary = summ.flavor_text;\r\n                    }\r\n                });\r\n                one.effect_entries.map((det, index) => {\r\n                    if (det.language.name === 'en') {\r\n                        effect = det.effect;\r\n                    }\r\n                });\r\n\r\n                let newAbility = {\r\n                    id: name, name: name, summary: summary, effect: effect\r\n\r\n                }\r\n                setAbility(prevAbility => ([...prevAbility, newAbility]));\r\n            });\r\n        }\r\n        fetchAbilities();\r\n    }, []);\r\n\r\n    function getAbility(abilities) {\r\n\r\n        const handleClose = () => {\r\n            setShow(false);\r\n        };\r\n        const handleShow = (index) => {\r\n            console.log('in' + index);\r\n            setName(ability[index].name);\r\n            setSumm(ability[index].summary);\r\n            setEff(ability[index].effect);\r\n            setShow(true);\r\n        };\r\n\r\n        return (\r\n            abilities.map((myAbility, index) =>\r\n                <>\r\n\r\n                    <Col xs='12' sm='6' md='12' lg='6' xl='6' style={{ cursor: 'pointer' }} onClick={() => handleShow(index)}>\r\n                        <h5 className='ability-style'>{myAbility.ability.name + ' '}<i className='fa fa-info-circle' style={{ fontSize: '0.8rem' }}></i></h5>\r\n                    </Col>\r\n\r\n                    <Modal show={show} onHide={handleClose} style={{ width: '80%' }}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{name}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Header>\r\n                            <Modal.Body>{summ}</Modal.Body>\r\n                        </Modal.Header>\r\n                        <Modal.Header>\r\n                            <Modal.Body>{eff}</Modal.Body>\r\n                        </Modal.Header>\r\n                    </Modal>\r\n                </>\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4 style={{ textAlign: 'left', marginLeft: '10px' }}>Abilities</h4>\r\n            <Row className='no-gutters'>\r\n                {getAbility(abilities)}\r\n            </Row>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Ability;","import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport './Pokemons.css';\r\n\r\nfunction getType(types) {\r\n    var typeColor = {\r\n        normal: 'linear-gradient(#A4ACAF 100%,transparent)',\r\n        fighting: 'linear-gradient(#D56723 100%,transparent)',\r\n        flying: 'linear-gradient(to bottom,#3DC7EF 50%, #BDB9B8 50%)',\r\n        poison: 'linear-gradient(#B97FC9 100%,transparent)',\r\n        ground: 'linear-gradient(to bottom,#F7DE3F 50%, #AB9842 50%)',\r\n        rock: 'linear-gradient(#A38C21 100%,transparent)',\r\n        bug: 'linear-gradient(#729F3F 100%,transparent)',\r\n        ghost: 'linear-gradient(#7B62A3 100%,transparent)',\r\n        steel: 'linear-gradient(#9EB7B8 100%,transparent)',\r\n        fire: 'linear-gradient(#FD7D24 100%,transparent)',\r\n        water: 'linear-gradient(#4592C4 100%,transparent)',\r\n        grass: 'linear-gradient(#9BCC50 100%,transparent)',\r\n        electric: 'linear-gradient(#EED535 100%,transparent)',\r\n        psychic: 'linear-gradient(#F366B9 100%,transparent)',\r\n        ice: 'linear-gradient(#51C4E7 100%,transparent)',\r\n        dragon: 'linear-gradient(to bottom,#53A4CF 50%, #F16E57 50%)',\r\n        dark: 'linear-gradient(#717171 100%,transparent)',\r\n        fairy: 'linear-gradient(#FDB9E9 100%,transparent)',\r\n        unknown: 'linear-gradient(#000 100%,transparent)',\r\n        shadow: 'linear-gradient(#000 100%,transparent)'\r\n    };\r\n\r\n    return (\r\n        types.map((type, index) =>\r\n            <Col xs='6' sm='6' md='6' lg='6' xl='6'>\r\n                <h5 className='ability-style' style={{ backgroundImage: typeColor[type.type.name], color: 'white' }} key={type.type.name}>{type.type.name}</h5>\r\n            </Col>\r\n\r\n        )\r\n    );\r\n};\r\n\r\nfunction Type({ types }) {\r\n    return (\r\n        <div>\r\n            <h4 style={{ textAlign: 'left', marginLeft: '10px' }}>Type</h4>\r\n            <Row className='no-gutters'>\r\n                {getType(types)}\r\n            </Row>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Type;","import { Col, Row } from \"react-bootstrap\";\r\nimport React, { useState } from 'react';\r\nimport PokemonDetails from \"./PokemonDetails\";\r\nimport './Pokemons.css';\r\nimport BarChart from './BarChart'\r\n\r\nfunction getStats(stats, data, setData) {\r\n    return (\r\n        stats.map((s, index) => {\r\n            return (\r\n\r\n                (s.stat.name !== 'special-attack' && s.stat.name !== 'special-defense') &&\r\n                (\r\n                    <>\r\n                        <Col className='stat-row'>\r\n                            {console.log(s.stat.name)}\r\n                            <h6 className='stat-col'>{s.stat.name}</h6>\r\n                            <p style={{ padding: '0rem', margin: '0rem 0rem 0.4rem' }}>{s.base_stat}</p>\r\n                        </Col >\r\n                        {/* {() => setData([s.base_stat])} */}\r\n                    </>\r\n\r\n                )\r\n            )\r\n        })\r\n        // return (\r\n        //     <BarChart data={data} />\r\n    )\r\n};\r\n\r\nfunction Stat({ stats }) {\r\n    const [data, setData] = useState([]);\r\n    // getStats(stats, data, setData);\r\n    return (\r\n        <Row className='no-gutters stat-row stat' >\r\n            {getStats(stats, data, setData)}\r\n            {/* <BarChart data={data} /> */}\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Stat;","import { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport './Pokemons.css';\r\nimport { getPokemon, getSpecies, getEvolution, getEvolutionChain } from \"../../services/Services\";\r\nimport Evolve from './Evolve';\r\nimport Ability from './Ability';\r\nimport Type from './Type';\r\nimport Stat from './Stat';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction PokemonDetails(props) {\r\n    const [pokemon, setPokemon] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [species, setSpecies] = useState([]);\r\n    const [evolution, setEvolution] = useState([]);\r\n    const [pokeDetails, setPokeDetails] = useState('');\r\n    const [prevBtn, setPrevBtn] = useState(true);\r\n    const [failed, setFailed] = useState(false);\r\n\r\n    var history = useHistory();\r\n    const path = \"https://pokeapi.co/api/v2\" + props.location.pathname;\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        async function fetchData() {\r\n            let pokemonData = await getPokemon(path);\r\n\r\n            if (pokemonData === 404) {\r\n                setFailed(true);\r\n            } else {\r\n                setFailed(false);\r\n                setPokemon(pokemonData);\r\n                if (pokemonData.id === 1) {\r\n                    setPrevBtn(false);\r\n                }\r\n                else {\r\n                    setPrevBtn(true);\r\n                }\r\n                let spec = await getSpecies(pokemonData.species.url);\r\n                setSpecies(spec);\r\n\r\n                spec.flavor_text_entries.map((fl, index) => {\r\n                    if (fl.language.name === 'en') {\r\n                        setPokeDetails(fl.flavor_text);\r\n                    }\r\n                })\r\n                let evolve = await getEvolution(spec.evolution_chain.url);\r\n                let chain = [];\r\n                let evoData = evolve.chain;\r\n                do {\r\n                    let numberOfEvolutions = evoData['evolves_to'].length;\r\n\r\n                    chain.push({\r\n                        \"species_name\": evoData.species.name,\r\n                        \"min_level\": !evoData ? 1 : evoData.min_level,\r\n                    });\r\n\r\n                    if (numberOfEvolutions > 1) {\r\n                        for (let i = 1; i < numberOfEvolutions; i++) {\r\n                            chain.push({\r\n                                \"species_name\": evoData.evolves_to[i].species.name,\r\n                                \"min_level\": !evoData.evolves_to[i] ? 1 : evoData.evolves_to[i].min_level,\r\n\r\n                            });\r\n                        }\r\n                    }\r\n                    evoData = evoData['evolves_to'][0];\r\n                } while (!!evoData && evoData.hasOwnProperty('evolves_to'));\r\n\r\n                var e = [];\r\n                const evoChain = await getEvolutionChain(chain);\r\n                setEvolution(evoChain);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [path]);\r\n\r\n    const handlePrevSubmit = () => {\r\n        history.push('/pokemon/' + (pokemon.id - 1));\r\n    }\r\n\r\n    const handleNextSubmit = () => {\r\n        history.push('/pokemon/' + (pokemon.id + 1));\r\n    }\r\n\r\n    return (\r\n        (loading ?\r\n            <h3> Loading.. </h3> :\r\n            failed ?\r\n                <h4 className={{ margin: 'auto' }\r\n                }> No Pokemon Found For this Search</h4 > : (\r\n\r\n                    <Card style={{ backgroundColor: 'lightgray' }}>\r\n                        <Row className='no-gutters' style={{ justifyContent: 'center' }}>\r\n                            <Col>\r\n                                <Button disabled={!prevBtn} className='btn-info btn-block' onClick={handlePrevSubmit}><i className='fa fa-arrow-left'></i>{'#' + (pokemon.id - 1)}</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <h4 style={{ margin: '0.3rem 1rem 0rem', textAlign: 'center' }}> {pokemon.name.toUpperCase() + '  '}<span style={{ color: \"grey\" }}> {'#' + pokemon.id}</span> </h4>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button className='btn-info btn-block' onClick={handleNextSubmit}>{'#' + (pokemon.id + 1)}<i className='fa fa-arrow-right'></i></Button>\r\n                            </Col>\r\n                        </Row >\r\n                        <Row>\r\n                            <Col className='comp-data'>\r\n                                <Card.Img className='full-image' src={pokemon.sprites.other[\"official-artwork\"][\"front_default\"]} />\r\n                                {/* <Card.Img xs='4' className='full-image' src={pokemon.sprites.other[\"dream_world\"][\"front_default\"]} /> */}\r\n                                <Stat stats={pokemon.stats} />\r\n                            </Col >\r\n                            <Col className='comp-data'>\r\n                                <div style={{ justifyContent: 'center' }}>\r\n\r\n\r\n                                    <h6 style={{ margin: '1rem 0.5rem' }} className='poke-details'>{pokeDetails}</h6>\r\n\r\n                                    <Row style={{ justifyContent: 'center', margin: '0.5rem', backgroundColor: 'steelblue', color: 'white', borderRadius: '0.3rem' }}>\r\n                                        <h5 style={{ margin: '0.5rem auto' }}>{'Height: ' + pokemon.height}</h5>\r\n                                        <h5 style={{ margin: '0.5rem auto' }}>{'Weight: ' + pokemon.weight}</h5>\r\n                                    </Row>\r\n                                    <Ability abilities={pokemon.abilities} />\r\n                                    <Type types={pokemon.types} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row >\r\n                        <Evolve evolution={evolution} />\r\n                    </Card >\r\n                )\r\n        )\r\n    );\r\n};\r\n\r\nexport default PokemonDetails;","import React, { useEffect, useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Shop } from 'react-bootstrap-icons';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { getAllPokemons } from '../../services/Services';\r\n\r\nfunction SearchBar({ keyword, setKeyword }) {\r\n    const [pokemonsName, setPokemonsName] = useState([]);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [search, setSearch] = useState(false);\r\n    var history = useHistory();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            let response = await getAllPokemons('https://pokeapi.co/api/v2/pokemon/?limit=1200');\r\n            let names = response.results.map(p => {\r\n                return (\r\n                    p.name\r\n                )\r\n            })\r\n            setPokemonsName(names);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [keyword]);\r\n\r\n    const onTextChangeHandler = (e) => {\r\n        const value = e.target.value;\r\n        let suggest = [];\r\n        if (value.length > 0) {\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggest = pokemonsName.sort().filter(v => regex.test(v))\r\n        }\r\n\r\n        setKeyword(value);\r\n        setSuggestions(suggest);\r\n    };\r\n\r\n    function selectedText(value) {\r\n        setKeyword('');\r\n        setSuggestions([]);\r\n        history.push('/pokemon/' + value.toLowerCase());\r\n    };\r\n\r\n\r\n\r\n\r\n    const renderSuggestions = () => {\r\n        if (suggestions.length === 0) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ul >\r\n                {\r\n                    suggestions.map((item, index) => (<li key={index} onClick={() => selectedText(item)}>{item}</li>))\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n\r\n\r\n    function cancelSearch() {\r\n\r\n        setSearch(true);\r\n        setKeyword('');\r\n        setSuggestions([]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!search && (<div className='heading-block' >\r\n                <h3 className='heading'>Welcome to Poke-dex</h3>\r\n                <i onClick={() => cancelSearch()} className='fa fa-search' style={{ fontSize: '1.5rem', marginBottom: '0.2rem', paddingBottom: '0.2rem' }}></i></div>)}\r\n            { search && (\r\n                <div className='search-bar'>\r\n                    <input\r\n                        className='searchBox'\r\n                        key=\"random1\"\r\n                        value={keyword}\r\n                        placeholder={\"Enter Rank or Name\"}\r\n                        onChange={onTextChangeHandler}\r\n                        onKeyDownCapture={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                history.push('/pokemon/' + keyword.toLowerCase());\r\n                                e.target.value = ''\r\n                            }\r\n                        }\r\n                        }\r\n                    />\r\n                    <i onClick={() => setSearch(false)} className='fa fa-close' style={{ fontSize: '1.5rem', marginBottom: '0.2rem', paddingBottom: '0.2rem' }}></i>\r\n                </div>\r\n            )}\r\n            <div className='suggest-block'>\r\n                {renderSuggestions()}\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default SearchBar;","\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport PokemonList from './components/pokemon/PokemonList.js';\nimport PokemonDetails from './components/pokemon/PokemonDetails';\nimport Evolve from './components/pokemon/Evolve';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport SearchBar from './components/pokemon/SearchBar';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [keyword, setKeyword] = useState('');\n\n\n\n\n\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <Container className='App' style={{ padding: 0 }}>\n        <SearchBar keyword={keyword} setKeyword={setKeyword} />\n        <Switch>\n          <Route path='/' exact component={PokemonList} />\n          <Route path='/pokemon/:name' component={PokemonDetails} />\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}