{"version":3,"sources":["components/pokemon/Pokemons.js","services/Services.js","components/pokemon/PokemonList.js","components/pokemon/Evolve.js","components/pokemon/Ability.js","components/pokemon/Type.js","components/pokemon/Stat.js","components/pokemon/PokemonCard.js","components/pokemon/PokemonDetails.js","components/pokemon/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["styles","makeStyles","theme","pokedexContainer","overflow","breakpoints","up","paddingLeft","paddingRight","paddingTop","pokecard","position","height","width","maxHeight","backgroundColor","boxShadow","rank","zIndex","fontSize","padding","borderBottomRightRadius","cardImage","titleContent","margin","title","color","getPokemonsName","pokemons","history","setKeyword","classes","map","p","index","Grid","item","onClick","push","id","onCardClickHandler","Paper","className","Typography","variant","component","CardActionArea","CardMedia","alt","name","image","CardContent","align","display","charAt","toUpperCase","slice","keys","Pokemons","useHistory","container","spacing","justify","getAllPokemons","url","a","Promise","resolve","reject","fetch","then","res","json","data","catch","message","console","log","getPokemon","pokemon","e","getSpecies","specie","getEvolution","path","getAllAbilities","abilities","all","getOneAbility","ability","_allAbilities","useStyles","root","flexGrow","customHoverFocus","marginBottom","loading","alignSelf","PokemonList","setPokemons","pokemonsArray","setPokemonsArray","loadMore","setLoadMore","useState","setLoading","offset","setOffset","page","setPage","useEffect","response","pokeArray","results","poke","s","split","k","length","key","sprite","fetchData","style","alignItems","justifyContent","CircularProgress","marginRight","IconButton","aria-label","ExpandMoreOutlined","paperBackground","evoChart","borderRadius","border","backgroundImage","flexDirection","evoImage","evoImageSmall","changeFlex","changeArrow","arrow","transform","marginLeft","evoME","getEvo","evolution","len","evo","i","Array","isArray","md","getSecEvo","direction","alignContent","to","pathname","species_name","Card","Img","src","Evolve","textAlign","Ability","setAbility","show","setShow","setName","summ","setSumm","eff","setEff","one","summary","effect","flavor_text_entries","language","flavor_text","effect_entries","det","newAbility","prevAbility","fetchAbilities","Row","handleClose","myAbility","Col","xs","sm","lg","xl","cursor","handleShow","Modal","onHide","Header","closeButton","Title","Body","getAbility","getType","types","typeColor","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","unknown","shadow","type","Type","getStats","stats","setData","stat","base_stat","Stat","pokeTitle","cardLeft","cardRight","pokeImage","maxWidth","PokemonCard","pokeDetails","prevBtn","handlePrevSubmit","handleNextSubmit","Button","disabled","card","Image","sprites","other","weight","PokemonDetails","props","setPokemon","setSpecies","setEvolution","setPokeDetails","failed","setFailed","setPrevBtn","location","pokemonData","species","spec","fl","evolution_chain","evolve","chain","evoData","numberOfEvolutions","innerChain","evolves_to","concat","hasOwnProperty","sp","megaEvo","varieties","forEach","is_default","includes","b","customizeToolbar","menuButton","small","search","shape","fade","palette","common","white","searchIcon","pointerEvents","inputRoot","resize","borderColor","searchInput","transition","transitions","create","SearchBar","keyword","onPokemonSearch","value","newArr","filter","arr","AppBar","Toolbar","Avatar","process","noWrap","TextField","onChange","target","toLowerCase","onKeyDownCapture","InputProps","input","InputLabelProps","borderBottomColor","label","size","App","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef7fe687.chunk.js","sourcesContent":["import './Pokemons.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Card, Grid, CardActionArea, CardMedia, CardContent, Typography, makeStyles, colors, Paper } from '@material-ui/core';\r\nimport zIndex from '@material-ui/core/styles/zIndex';\r\n\r\nconst styles = makeStyles(theme => ({\r\n\r\n    pokedexContainer: {\r\n        overflow: 'hidden',\r\n        [theme.breakpoints.up('xs')]: {\r\n            paddingLeft: '1rem',\r\n            paddingRight: '1rem',\r\n            paddingTop: '2rem',\r\n            overflow: 'hidden',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            paddingLeft: '1.5rem',\r\n            paddingRight: '1.5rem',\r\n            paddingTop: '2rem'\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            paddingLeft: '2rem',\r\n            paddingRight: '2rem',\r\n            paddingTop: '2rem'\r\n        }\r\n\r\n    },\r\n    pokecard: {\r\n        position: 'relative',\r\n        height: '8.8rem',\r\n        width: '6.5rem',\r\n        maxHeight: '9rem',\r\n        backgroundColor: '#444444',\r\n        boxShadow: '2px 2px 5px black',\r\n    },\r\n    // circlularBack: {\r\n    //     borderRadius: '50%',\r\n    //     margin: '0.5rem',\r\n    //     zIndex: '1'\r\n    // },\r\n    rank: {\r\n        position: 'absolute',\r\n        zIndex: '1',\r\n        fontSize: '0.6rem',\r\n        padding: '0.05rem 0.5rem 0.05rem 0.5rem',\r\n        backgroundColor: '#CEBF7B',\r\n        borderBottomRightRadius: '0.4rem'\r\n\r\n    },\r\n    cardImage: {\r\n        height: '6rem',\r\n        padding: '0.5rem'\r\n    }\r\n    , titleContent: {\r\n        // fontSize: '0.70rem',\r\n        margin: '0.5rem 0.05rem 0.2rem 0.05rem',\r\n        padding: '0 0'\r\n    },\r\n    title: {\r\n        fontSize: '0.80rem',\r\n        margin: '0rem 0.5rem ',\r\n        padding: '0 0',\r\n        color: 'white'\r\n    }\r\n\r\n}));\r\n\r\n\r\n\r\nfunction getPokemonsName(pokemons, history, setKeyword) {\r\n\r\n    const onCardClickHandler = (p, history) => {\r\n        history.push('/pokemon/' + p.id)\r\n        setKeyword('');\r\n    }\r\n\r\n    const classes = styles();\r\n    return (\r\n        pokemons.map((p, index) =>\r\n            // <Col style={{ padding: 0 }}>\r\n\r\n            <Grid key={p.keys} item onClick={() => onCardClickHandler(p, history)}>\r\n                <Paper className={classes.pokecard}>\r\n                    <Typography\r\n                        variant='h1'\r\n                        component='h5'\r\n                        className={classes.rank}>\r\n                        {'#' + p.id}\r\n                    </Typography>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            className={classes.cardImage}\r\n                            component=\"img\"\r\n                            alt={p.name}\r\n                            image={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${p.id}.png`}\r\n                            title={p.name}\r\n                        />\r\n                        <CardContent className={classes.titleContent}>\r\n                            <Typography\r\n                                align='center'\r\n                                display='block'\r\n                                variant=\"p\"\r\n                                component=\"h6\"\r\n                                className={classes.title}>\r\n\r\n                                {p.name.charAt(0).toUpperCase() + p.name.slice(1)}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Paper>\r\n            </Grid>\r\n\r\n\r\n            // </Col>\r\n        )\r\n    )\r\n};\r\n\r\nfunction Pokemons({ pokemons, setKeyword }) {\r\n    var history = useHistory();\r\n    const classes = styles();\r\n    return (\r\n        <Grid container spacing={1} justify=\"center\" className={classes.pokedexContainer}>\r\n            {getPokemonsName(pokemons, history, setKeyword)}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Pokemons;","export async function getAllPokemons(url) {\r\n    return new Promise((resolve, reject) => {\r\n        let isActive = true;\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n\r\n        return () => { isActive = false; };\r\n    });\r\n};\r\n\r\nexport async function getPokemonsData(pokemons) {\r\n    let _PokemonsData = await Promise.all(\r\n        pokemons.map(\r\n            async pokemon => {\r\n                return getPokemon(pokemon.url)\r\n            }\r\n        )\r\n    );\r\n\r\n    return _PokemonsData;\r\n\r\n};\r\n\r\nexport async function getPokemon(pokemon) {\r\n    return new Promise((resolve, reject) =>\r\n        fetch(pokemon)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n            }).catch((e) => {\r\n                resolve(404);\r\n            })\r\n    );\r\n};\r\n\r\nexport async function getSpecies(specie) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(specie)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n    });\r\n};\r\n\r\nexport async function getEvolution(path) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(path)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n    });\r\n};\r\n\r\nexport async function getEvolutionChain(chain) {\r\n    let _evoData = await Promise.all(\r\n        chain.map(\r\n            async c => {\r\n                return getPokemon('https://pokeapi.co/api/v2/pokemon/' + c.species_name)\r\n            }\r\n        )\r\n    );\r\n    return _evoData;\r\n\r\n};\r\n\r\nexport async function getAllAbilities(abilities) {\r\n    let _allAbilities = await Promise.all(\r\n        abilities.map(\r\n            async a => {\r\n                return getOneAbility(a.ability.url);\r\n            }\r\n        )\r\n    )\r\n    return _allAbilities;\r\n\r\n};\r\n\r\nasync function getOneAbility(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n\r\n    });\r\n};","import './Pokemons.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport Pokemons from './Pokemons';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { getAllPokemons, getPokemonsData } from '../../services/Services';\r\nimport { CircularProgress, Grid, IconButton, makeStyles } from '@material-ui/core';\r\nimport { ExpandMoreOutlined } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    customHoverFocus: {\r\n        \"&:hover, &.Mui-focusVisible\": { backgroundColor: \"white\" },\r\n        backgroundColor: '#888',\r\n        marginBottom: '1rem',\r\n    },\r\n    loading: {\r\n        color: '#EEE',\r\n        alignSelf: 'center'\r\n    }\r\n}));\r\n\r\n\r\nfunction PokemonList({ pokemons, setPokemons, setKeyword, pokemonsArray, setPokemonsArray, loadMore, setLoadMore }) {\r\n    const [currUrl, setCurrUrl] = useState('https://pokeapi.co/api/v2/pokemon/?limit=50');\r\n    const [nextUrl, setNextUrl] = useState('');\r\n    const [prevUrl, setPrevUrl] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [offset, setOffset] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const classes = useStyles();\r\n\r\n\r\n    useEffect(async () => {\r\n        async function fetchData() {\r\n            let response = await getAllPokemons('https://pokeapi.co/api/v2/pokemon/?limit=1200');\r\n            var pokeArray = response.results.map((poke) => {\r\n                var s = poke.url.split('/');\r\n                var k = s[s.length - 2];\r\n                return (\r\n                    {\r\n                        key: k,\r\n                        id: k,\r\n                        name: poke.name,\r\n                        sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${k}.png`\r\n\r\n                    });\r\n            })\r\n            setPokemonsArray(pokeArray);\r\n            setPokemons(pokeArray.slice(0, 50));\r\n            setOffset(50);\r\n            setPage(1);\r\n\r\n            setLoading(false);\r\n            setLoadMore(false);\r\n        }\r\n\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n\r\n    function nextPage() {\r\n        if (!loadMore) {\r\n            setPokemons([...pokemons, ...pokemonsArray.slice(offset, offset + 50)]);\r\n            setOffset(offset + 50);\r\n            setPage(page + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        loading ?\r\n            <div style={{\r\n                display: 'flex', alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress className={classes.loading} />\r\n            </div> :\r\n            (<div style={{\r\n                backgroundColor: '#333333', overflow: 'hidden',\r\n                paddingRight: '0rem',\r\n                marginRight: '0rem',\r\n            }}>\r\n                <Pokemons pokemons={pokemons} setKeyword={setKeyword} />\r\n                <hr style={{ padding: '0rem', overflow: 'hidden' }} />\r\n                <Grid container spacing='center' justify='center'>\r\n                    <IconButton className={classes.customHoverFocus} aria-label=\"Load More\">\r\n                        <ExpandMoreOutlined\r\n                            color='error'\r\n                            onClick={nextPage} />\r\n                    </IconButton>\r\n                </Grid>\r\n            </div >)\r\n\r\n    )\r\n};\r\n\r\nexport default PokemonList;","import { Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Card, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './Pokemons.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n\r\n    },\r\n    paperBackground: {\r\n        color: 'black',\r\n        backgroundColor: '#555',\r\n        boxShadow: 'none',\r\n        margin: '0rem',\r\n        padding: '0rem'\r\n    },\r\n    evoChart: {\r\n        borderRadius: '2%',\r\n        border: '2px solid black',\r\n        boxShadow: '2px 2px 5px black',\r\n        padding: '1rem',\r\n        backgroundImage: 'linear-gradient(120deg, rgb(68, 68, 71), rgb(15, 15, 24))',\r\n        [theme.breakpoints.up('xs')]: {\r\n            flexDirection: 'column',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            flexDirection: 'row',\r\n        },\r\n    },\r\n    evoImage: {\r\n        backgroundImage: 'linear-gradient(120deg, rgb(136, 136, 139), rgb(43, 43, 46))',\r\n        borderRadius: '50%',\r\n        border: '5px solid white',\r\n        boxShadow: '0.3rem 0.3rem 1rem black',\r\n        marginBottom: '1rem',\r\n        width: '8rem',\r\n        padding: '0.8rem',\r\n        [theme.breakpoints.up('xs')]: {\r\n            width: '7rem',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '8rem',\r\n        },\r\n    },\r\n    evoImageSmall: {\r\n        backgroundImage: 'linear-gradient(120deg, rgb(136, 136, 139), rgb(43, 43, 46))',\r\n        borderRadius: '50%',\r\n        border: '5px solid white',\r\n        boxShadow: '0.3rem 0.3rem 1rem black',\r\n        marginBottom: '1rem',\r\n        width: '7rem',\r\n        padding: '0.2rem',\r\n        [theme.breakpoints.up('xs')]: {\r\n            width: '6rem',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '7rem',\r\n        },\r\n    },\r\n    changeFlex: {\r\n\r\n    },\r\n    changeArrow: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            flexDirection: 'column',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            flexDirection: 'row',\r\n        },\r\n    },\r\n    arrow: {\r\n        fontSize: '3rem',\r\n        color: '#aaa',\r\n        [theme.breakpoints.up('xs')]: {\r\n\r\n            marginBottom: '2rem'\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            transform: 'rotate(-90deg)',\r\n            marginLeft: '1rem',\r\n            marginRight: '1rem',\r\n            marginBottom: '2rem'\r\n\r\n        },\r\n    }\r\n}));\r\n\r\nvar evoME = 2;\r\n\r\nconst getEvo = (evolution, classes) => {\r\n    var len = evolution.length;\r\n    console.log('length  ' + len);\r\n    return (\r\n        evolution.map((evo, i) => {\r\n            console.log('evo ' + evo.sprite);\r\n\r\n            return (\r\n                Array.isArray(evo) ? (\r\n                    <Grid item md={evoME}>\r\n                        <Grid container justify='space-evenly' alignItems='center' spacing='5' className={classes.changeFlex}>\r\n                            {getSecEvo(evo, classes)}\r\n                        </Grid>\r\n\r\n                    </Grid>) :\r\n                    (< Grid item direction='row' justify='center' alignContent='center' >\r\n                        <Grid container direction='row' justify='center' alignItems='center' className={classes.changeArrow}>\r\n                            <Link to={{ pathname: '/pokemon/' + evo.species_name, key: evo.species_name }}>\r\n                                <Card.Img src={evo.sprite} alt={evo.species_name} className={classes.evoImage} />\r\n                                <h3 className='evo-name'>{evo.species_name.charAt(0).toUpperCase() + evo.species_name.slice(1)}</h3>\r\n                            </Link>\r\n                            {len !== i + 1 && <i className={classes.arrow}><i className='fa fa-chevron-down'></i></i>}\r\n                        </Grid>\r\n                    </Grid >\r\n                    )\r\n            )\r\n\r\n        }\r\n        )\r\n    )\r\n};\r\n\r\nfunction getSecEvo(evo, classes) {\r\n    if (evo.length > 2) {\r\n        evoME = 8\r\n    } else {\r\n        evoME = 2\r\n    }\r\n\r\n    return (\r\n        evo.map((e, i) => {\r\n            return (\r\n                < Grid item justify='center' alignItems='center'>\r\n                    <Link to={{ pathname: '/pokemon/' + e.species_name, key: e.species_name }}>\r\n                        <Card.Img src={e.sprite} alt={e.species_name} className={classes.evoImageSmall} />\r\n                        <h3 className='evo-name'>{e.species_name.charAt(0).toUpperCase() + e.species_name.slice(1)}</h3>\r\n                    </Link>\r\n                </Grid >\r\n            )\r\n        })\r\n    );\r\n};\r\n\r\nfunction Evolve({ evolution }) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.paperBackground}>\r\n            <Grid >\r\n                <h3 style={{ textAlign: 'center', margin: '1rem 0rem' }}>Evolutions</h3>\r\n                <Grid container justify='center' alignItems='center' className={classes.evoChart}>\r\n                    {getEvo(evolution, classes)}\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Evolve;","import React, { useEffect, useState } from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllAbilities } from '../../services/Services';\r\nimport './Pokemons.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nfunction Ability({ abilities }) {\r\n    const [ability, setAbility] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [summ, setSumm] = useState('');\r\n    const [eff, setEff] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchAbilities() {\r\n            const allAbilities = await getAllAbilities(abilities);\r\n            allAbilities.map((one, index) => {\r\n                let name = one.name;\r\n                let summary = '';\r\n                let effect = '';\r\n                one.flavor_text_entries.map((summ, index) => {\r\n                    if (summ.language.name === 'en') {\r\n                        summary = summ.flavor_text;\r\n                    }\r\n                });\r\n                one.effect_entries.map((det, index) => {\r\n                    if (det.language.name === 'en') {\r\n                        effect = det.effect;\r\n                    }\r\n                });\r\n\r\n                let newAbility = {\r\n                    id: name, name: name, summary: summary, effect: effect\r\n\r\n                }\r\n                setAbility(prevAbility => ([...prevAbility, newAbility]));\r\n            });\r\n        }\r\n        fetchAbilities();\r\n    }, []);\r\n\r\n    function getAbility(abilities) {\r\n\r\n        const handleClose = () => {\r\n            setShow(false);\r\n        };\r\n        const handleShow = (index) => {\r\n            console.log('in' + index);\r\n            setName(ability[index].name);\r\n            setSumm(ability[index].summary);\r\n            setEff(ability[index].effect);\r\n            setShow(true);\r\n        };\r\n\r\n        return (\r\n            abilities.map((myAbility, index) =>\r\n                <>\r\n\r\n                    <Col xs='12' sm='6' md='12' lg='12' xl='6' style={{ cursor: 'pointer' }} onClick={() => handleShow(index)}>\r\n                        <h5 className='ability-style'>{myAbility.ability.name + ' '}<i className='fa fa-info-circle' style={{ fontSize: '0.8rem' }}></i></h5>\r\n                    </Col>\r\n\r\n                    <Modal show={show} onHide={handleClose} style={{ width: '100%' }}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{name}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Header>\r\n                            <Modal.Body>{summ}</Modal.Body>\r\n                        </Modal.Header>\r\n                        <Modal.Header>\r\n                            <Modal.Body>{eff}</Modal.Body>\r\n                        </Modal.Header>\r\n                    </Modal>\r\n                </>\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4 style={{ textAlign: 'left', marginLeft: '20px', color: '#EEE' }}>Abilities</h4>\r\n            <Row className='no-gutters'>\r\n                {getAbility(abilities)}\r\n            </Row>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Ability;","import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport './Pokemons.css';\r\n\r\nfunction getType(types) {\r\n    var typeColor = {\r\n        normal: 'linear-gradient(#A4ACAF 100%,transparent)',\r\n        fighting: 'linear-gradient(#D56723 100%,transparent)',\r\n        flying: 'linear-gradient(to bottom,#3DC7EF 50%, #BDB9B8 50%)',\r\n        poison: 'linear-gradient(#B97FC9 100%,transparent)',\r\n        ground: 'linear-gradient(to bottom,#F7DE3F 50%, #AB9842 50%)',\r\n        rock: 'linear-gradient(#A38C21 100%,transparent)',\r\n        bug: 'linear-gradient(#729F3F 100%,transparent)',\r\n        ghost: 'linear-gradient(#7B62A3 100%,transparent)',\r\n        steel: 'linear-gradient(#9EB7B8 100%,transparent)',\r\n        fire: 'linear-gradient(#FD7D24 100%,transparent)',\r\n        water: 'linear-gradient(#4592C4 100%,transparent)',\r\n        grass: 'linear-gradient(#9BCC50 100%,transparent)',\r\n        electric: 'linear-gradient(#EED535 100%,transparent)',\r\n        psychic: 'linear-gradient(#F366B9 100%,transparent)',\r\n        ice: 'linear-gradient(#51C4E7 100%,transparent)',\r\n        dragon: 'linear-gradient(to bottom,#53A4CF 50%, #F16E57 50%)',\r\n        dark: 'linear-gradient(#717171 100%,transparent)',\r\n        fairy: 'linear-gradient(#FDB9E9 100%,transparent)',\r\n        unknown: 'linear-gradient(#000 100%,transparent)',\r\n        shadow: 'linear-gradient(#000 100%,transparent)'\r\n    };\r\n\r\n    return (\r\n        types.map((type, index) =>\r\n            <Col xs='6' sm='6' md='6' lg='6' xl='6'>\r\n                <h5 className='ability-style' style={{ backgroundImage: typeColor[type.type.name], color: 'white' }} key={type.type.name}>{type.type.name}</h5>\r\n            </Col>\r\n\r\n        )\r\n    );\r\n};\r\n\r\nfunction Type({ types }) {\r\n    return (\r\n        <div>\r\n            <h4 style={{ textAlign: 'left', marginLeft: '20px', color: '#EEE' }}>Type</h4>\r\n            <Row className='no-gutters'>\r\n                {getType(types)}\r\n            </Row>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Type;","import { Col, Row } from \"react-bootstrap\";\r\nimport React, { useState } from 'react';\r\nimport PokemonDetails from \"./PokemonDetails\";\r\nimport './Pokemons.css';\r\nimport BarChart from './BarChart'\r\n\r\nfunction getStats(stats, data, setData) {\r\n    return (\r\n        stats.map((s, index) => {\r\n            return (\r\n\r\n                (s.stat.name !== 'special-attack' && s.stat.name !== 'special-defense') &&\r\n                (\r\n                    <>\r\n                        <Col className='stat-row'>\r\n                            {console.log(s.stat.name)}\r\n                            <h6 className='stat-col'>{s.stat.name}</h6>\r\n                            <p style={{ padding: '0rem', margin: '0rem 0rem 0.4rem' }}>{s.base_stat}</p>\r\n                        </Col >\r\n                        {/* {() => setData([s.base_stat])} */}\r\n                    </>\r\n\r\n                )\r\n            )\r\n        })\r\n        // return (\r\n        //     <BarChart data={data} />\r\n    )\r\n};\r\n\r\nfunction Stat({ stats }) {\r\n    const [data, setData] = useState([]);\r\n    // getStats(stats, data, setData);\r\n    return (\r\n        <Row className='no-gutters stat-row stat' >\r\n            {getStats(stats, data, setData)}\r\n            {/* <BarChart data={data} /> */}\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Stat;","import { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Image, Row } from \"react-bootstrap\";\r\nimport './Pokemons.css';\r\nimport { getPokemon, getSpecies, getEvolution, getEvolutionChain } from \"../../services/Services\";\r\nimport Evolve from './Evolve';\r\nimport Ability from './Ability';\r\nimport Type from './Type';\r\nimport Stat from './Stat';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CircularProgress, Grid, Paper, Container, makeStyles, Divider } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        overflow: 'hidden'\r\n    },\r\n    container: {\r\n        backgroundColor: '#555',\r\n        padding: '0rem 0rem',\r\n        overflow: 'hidden',\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: '0rem 5rem'\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '0rem 2rem'\r\n        },\r\n    },\r\n    pokeTitle: {\r\n        margin: '0.3rem 0.5rem 0rem',\r\n        textAlign: 'center',\r\n        color: '#eee',\r\n        [theme.breakpoints.up('xs')]: {\r\n            fontSize: '1rem'\r\n        },\r\n        justify: 'center',\r\n        alignSelf: 'center',\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '1.2rem'\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '1.6rem'\r\n        },\r\n    },\r\n    cardLeft: {\r\n        backgroundColor: '#333',\r\n        padding: '0rem',\r\n        borderRadius: '0.5rem',\r\n        marginBottom: '2rem',\r\n        boxShadow: '2px 2px 5px black',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginBottom: '0rem'\r\n        },\r\n        // [theme.breakpoints.up('md')]: {\r\n        //     margin: '1rem 0.5rem 0rem 0rem',\r\n        // }\r\n\r\n    },\r\n    cardRight: {\r\n        backgroundColor: '#333',\r\n        padding: '1rem',\r\n        borderRadius: '0.5rem',\r\n        boxShadow: '2px 2px 5px black',\r\n\r\n\r\n\r\n        // [theme.breakpoints.up('md')]: {\r\n        //     margin: '1rem 0rem 0rem rem',\r\n        // }\r\n\r\n    },\r\n    loading: {\r\n        color: '#EEE',\r\n        alignSelf: 'center',\r\n        overflow: 'hidden',\r\n        paddingRight: '0rem',\r\n        marginRight: '0rem',\r\n\r\n    },\r\n    paperBackground: {\r\n        color: 'black',\r\n        backgroundColor: '#555',\r\n        boxShadow: 'none',\r\n        margin: '0 2rem'\r\n    },\r\n    pokeImage: {\r\n        maxWidth: '15rem',\r\n        margin: '1.5rem auto',\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: '0rem auto',\r\n            maxWidth: '25rem'\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            margin: '0rem auto',\r\n            maxWidth: '20rem'\r\n        },\r\n    }\r\n}));\r\n\r\nfunction PokemonCard({ pokemon, evolution, pokeDetails, prevBtn }) {\r\n\r\n    const classes = useStyles();\r\n    var history = useHistory();\r\n\r\n    const handlePrevSubmit = () => {\r\n        history.push('/pokemon/' + (pokemon.id - 1));\r\n    }\r\n\r\n    const handleNextSubmit = () => {\r\n        history.push('/pokemon/' + (pokemon.id + 1));\r\n    }\r\n\r\n    const getPrevNextButtons = () => {\r\n        return (\r\n            <Paper className={classes.paperBackground}>\r\n                <Grid container justify='space-between'>\r\n                    <Grid item>\r\n                        <Button disabled={!prevBtn} style={{ boxShadow: '2px 2px 5px black', }} className='btn-dark' onClick={handlePrevSubmit}><i className='fa fa-arrow-left'></i></Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <h6 className={classes.pokeTitle}><span style={{ color: \"#BBB\" }}> {'#' + pokemon.id + '   '}</span> {pokemon.name.toUpperCase()} </h6>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ boxShadow: '2px 2px 5px black', }} className='btn-dark' onClick={handleNextSubmit}><i className='fa fa-arrow-right'></i></Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        )\r\n    };\r\n\r\n    const getDetailsCards = () => {\r\n        return (\r\n            <Paper className={classes.paperBackground}>\r\n                <Grid container alignItems='spac' justify='space-between'>\r\n                    <Grid xs={12} sm={12} md={6} item className={classes.cardLeft}>\r\n                        <Grid container className={classes.card}>\r\n                            <Image className={classes.pokeImage} src={pokemon.sprites.other[\"official-artwork\"][\"front_default\"]} />\r\n                        </Grid>\r\n                        <Stat stats={pokemon.stats} />\r\n                    </Grid  >\r\n                    <Grid item xs={12} sm={12} md={6} className={classes.cardRight} >\r\n                        <h5 style={{ margin: '1rem' }} className='poke-details'>{pokeDetails}</h5>\r\n\r\n                        <Grid item container >\r\n                            <Grid item xs={6}>\r\n                                <h5 className='physic-details'>{'Height: ' + pokemon.height / 10 + 'm'}</h5>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <h5 className='physic-details'>{'Weight: ' + pokemon.weight / 10 + 'kg'}</h5>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Ability abilities={pokemon.abilities} />\r\n                        <Type types={pokemon.types} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        )\r\n    };\r\n\r\n    const getEvolutionCards = () => {\r\n        return (\r\n            <Paper className={classes.paperBackground}>\r\n                {(evolution != '404' && evolution.length > 1) && <Evolve evolution={evolution} />}\r\n            </Paper>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Grid container direction='column' spacing={2} justify='center' style={{ backgroundColor: '#555', paddingTop: '0.5rem' }}>\r\n                <Grid item>\r\n                    {getPrevNextButtons()}\r\n                </Grid>\r\n                <Grid item>\r\n                    {getDetailsCards()}\r\n                </Grid>\r\n                <Grid item>\r\n                    {getEvolutionCards()}\r\n                </Grid>\r\n            </Grid >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonCard;","import { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport './Pokemons.css';\r\nimport { getPokemon, getSpecies, getEvolution, getEvolutionChain } from \"../../services/Services\";\r\nimport Evolve from './Evolve';\r\nimport Ability from './Ability';\r\nimport Type from './Type';\r\nimport Stat from './Stat';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport PokemonCard from \"./PokemonCard\";\r\n\r\n\r\nfunction PokemonDetails(props) {\r\n    const [pokemon, setPokemon] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [species, setSpecies] = useState([]);\r\n    const [evolution, setEvolution] = useState([]);\r\n    const [pokeDetails, setPokeDetails] = useState('');\r\n    const [failed, setFailed] = useState(false);\r\n    const [prevBtn, setPrevBtn] = useState(false);\r\n\r\n    var history = useHistory();\r\n    const path = \"https://pokeapi.co/api/v2\" + props.location.pathname;\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        async function fetchData() {\r\n            let pokemonData = await getPokemon(path);\r\n\r\n            if (pokemonData === 404) {\r\n                setFailed(true);\r\n            } else {\r\n                setFailed(false);\r\n                setPokemon(pokemonData);\r\n                if (pokemonData.id < 2) {\r\n                    setPrevBtn(false);\r\n                }\r\n                else {\r\n                    setPrevBtn(true);\r\n                }\r\n                let spec = await getSpecies(pokemonData.species.url);\r\n                setSpecies(spec);\r\n\r\n                spec.flavor_text_entries.map((fl, index) => {\r\n                    if (fl.language.name === 'en') {\r\n                        setPokeDetails(fl.flavor_text);\r\n                    }\r\n                })\r\n                let evolve = await getEvolution(spec.evolution_chain.url);\r\n                let chain = [];\r\n                let evoData = evolve.chain;\r\n                var i = 0;\r\n                do {\r\n\r\n                    let numberOfEvolutions = evoData['evolves_to'].length;\r\n\r\n                    var s = evoData.species.url.split('/');\r\n                    var k = s[s.length - 2];\r\n                    chain.push({\r\n                        \"id\": k,\r\n                        \"species_name\": evoData.species.name,\r\n                        \"sprite\": `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${k}.png`\r\n                    });\r\n\r\n                    if (numberOfEvolutions > 1) {\r\n                        var innerChain = [];\r\n                        for (let i = 0; i < numberOfEvolutions; i++) {\r\n                            var s = evoData.evolves_to[i].species.url.split('/');\r\n                            var k = s[s.length - 2];\r\n                            innerChain.push({\r\n                                \"id\": k,\r\n                                \"species_name\": evoData.evolves_to[i].species.name,\r\n                                \"sprite\": `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${k}.png`\r\n                            });\r\n                        }\r\n                        chain = chain.concat([innerChain]);\r\n                        evoData = evoData['evolves_to'][0]['evolves_to'][0];\r\n                    }\r\n                    else {\r\n                        evoData = evoData['evolves_to'][0];\r\n                    }\r\n\r\n                } while (!!evoData && evoData.hasOwnProperty('evolves_to'));\r\n                if (!Array.isArray(chain[chain.length - 1])) {\r\n                    console.log('inside last form')\r\n                    let sp = await getSpecies('https://pokeapi.co/api/v2/pokemon-species/' + chain[chain.length - 1].id);\r\n\r\n                    var megaEvo = [];\r\n                    sp.varieties.forEach((s, i) => {\r\n                        console.log('inside loop');\r\n                        if (!s.is_default && s.pokemon.name.includes('mega')) {\r\n                            var b = s.pokemon.url.split('/');\r\n                            var k = b[b.length - 2];\r\n                            console.log('inside iff' + s.pokemon.url);\r\n                            megaEvo.push({\r\n                                \"id\": k,\r\n                                \"species_name\": s.pokemon.name,\r\n                                \"sprite\": `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${k}.png`\r\n                            });\r\n                        }\r\n\r\n                    });\r\n                    if (megaEvo.length > 0) {\r\n                        chain = chain.concat([megaEvo]);\r\n                    }\r\n                } else {\r\n                    console.log('inside last form')\r\n                    let sp = await getSpecies('https://pokeapi.co/api/v2/pokemon-species/' + chain[chain.length - 1][0].id);\r\n\r\n                    var megaEvo = [];\r\n                    sp.varieties.forEach((s, i) => {\r\n                        console.log('inside loop');\r\n                        if (!s.is_default && s.pokemon.name.includes('mega')) {\r\n                            var b = s.pokemon.url.split('/');\r\n                            var k = b[b.length - 2];\r\n                            console.log('inside iff' + s.pokemon.url);\r\n                            megaEvo.push({\r\n                                \"id\": k,\r\n                                \"species_name\": s.pokemon.name,\r\n                                \"sprite\": `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${k}.png`\r\n                            });\r\n                        }\r\n\r\n                    });\r\n                    if (megaEvo.length > 0) {\r\n                        chain = chain.concat([megaEvo]);\r\n                    }\r\n                }\r\n\r\n                setEvolution(chain);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [path]);\r\n\r\n\r\n\r\n    return (\r\n        (loading ?\r\n            <div style={{\r\n                display: 'flex', alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress />\r\n            </div> :\r\n            failed ?\r\n                <div style={{\r\n                    display: 'flex', alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    overflow: 'hidden'\r\n                }}>\r\n                    <h4 style={{ color: '#ddd', overflow: 'hidden' }}> No Pokemon Found For this Search</h4 >\r\n                </div> :\r\n                // <></>\r\n                < PokemonCard pokemon={pokemon} evolution={evolution} pokeDetails={pokeDetails} prevBtn={prevBtn} />\r\n\r\n\r\n        )\r\n    );\r\n};\r\n\r\nexport default PokemonDetails;","import { AppBar, InputBase, IconButton, MenuItem, Toolbar, Typography, TextField, Avatar } from '@material-ui/core';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { Keyboard, KeyboardHide } from '@material-ui/icons';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Shop } from 'react-bootstrap-icons';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { getAllPokemons, getPokemonsData } from '../../services/Services';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n        paddingRight: '0rem',\r\n        marginRight: '0rem'\r\n\r\n    },\r\n    customizeToolbar: {\r\n        maxHeight: 1,\r\n        backgroundColor: '#222'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        marginLeft: '1rem',\r\n        color: '#A0822E',\r\n        cursor: 'pointer',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: '2.0rem',\r\n        },\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.10),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.20),\r\n        },\r\n        position: 'absolute',\r\n        marginRight: 0,\r\n        right: '1rem',\r\n        height: 40,\r\n        width: '40%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: '30%',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 1),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        color: '#BBB',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: '#BBB',\r\n    },\r\n    resize: {\r\n        height: 9,\r\n        color: '#DDD',\r\n        borderColor: '#BBB'\r\n\r\n    },\r\n    searchInput: {\r\n        color: '#ddd',\r\n\r\n        padding: theme.spacing(0, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        marginLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        marginRight: `calc(1em + ${theme.spacing(3)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '80%',\r\n        fontSize: 10,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '80%',\r\n            '&:focus': {\r\n                width: '80%',\r\n            },\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '90%',\r\n            '&:focus': {\r\n                width: '90%',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction SearchBar({ pokemons, setPokemons, keyword, setKeyword, pokemonsArray, setPokemonsArray, loadMore, setLoadMore }) {\r\n    var history = useHistory();\r\n\r\n\r\n\r\n    const onPokemonSearch = async value => {\r\n        if (value.length > 1) {\r\n            let arr = pokemonsArray;\r\n            let newArr = arr.filter(poke =>\r\n                (poke.name.includes(value))\r\n            );\r\n\r\n            setPokemons(newArr);\r\n            setLoadMore(false);\r\n        }\r\n        else if (value.length > 0 && value.length < 2) {\r\n            let arr = pokemonsArray.slice(0, 200);\r\n            let newArr = arr.filter(poke =>\r\n                (poke.name.includes(value))\r\n            );\r\n            setLoadMore(false);\r\n            setPokemons(newArr);\r\n        }\r\n        else {\r\n            setLoadMore(true);\r\n            await setPokemons(pokemonsArray.slice(0, 50));\r\n        }\r\n    }\r\n\r\n    const onTextChangeHandler = (e) => {\r\n        const value = e.target.value.toLowerCase();\r\n        setKeyword(value);\r\n        onPokemonSearch(value);\r\n    };\r\n\r\n    const onKeyDownHandler = (e) => {\r\n        if (e.key === 'Enter') {\r\n            history.push('/pokemon/' + e.target.value.toLowerCase());\r\n            setKeyword('');\r\n        }\r\n\r\n    }\r\n\r\n    const onlogoClickHandler = () => {\r\n        setKeyword('');\r\n        history.push('/');\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.customizeToolbar}>\r\n                    <div className={classes.title} onClick={onlogoClickHandler}>\r\n                        <Avatar src={process.env.PUBLIC_URL + '/pokeball.png'} className={classes.small} />\r\n                        <Typography variant=\"h5\" noWrap >\r\n                            Pokedex\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <TextField onChange={onTextChangeHandler}\r\n                            onKeyDownCapture={onKeyDownHandler}\r\n                            className={classes.searchInput}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    input: classes.resize\r\n                                },\r\n                            }}\r\n                            InputLabelProps={{\r\n                                style: {\r\n                                    color: '#BBB',\r\n                                    borderBottomColor: '#BBB'\r\n                                }\r\n                            }}\r\n                            label=\"Pokemon\"\r\n                            variant=\"filled\"\r\n                            value={keyword}\r\n                            size='small'\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport PokemonList from './components/pokemon/PokemonList.js';\nimport PokemonDetails from './components/pokemon/PokemonDetails';\nimport Evolve from './components/pokemon/Evolve';\nimport { Container } from 'react-bootstrap';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport SearchBar from './components/pokemon/SearchBar';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [keyword, setKeyword] = useState('');\n  const [pokemons, setPokemons] = useState([]);\n  const [pokemonsArray, setPokemonsArray] = useState([]);\n  const [loadMore, setLoadMore] = useState(true);\n\n\n\n\n  return (\n    <Router>\n      <SearchBar pokemons={pokemons} setPokemons={setPokemons} keyword={keyword} setKeyword={setKeyword} pokemonsArray={pokemonsArray} setPokemonsArray={setPokemonsArray} loadMore={loadMore} setLoadMore={setLoadMore} />\n      <Switch>\n        <Route exact path='/' render={(props) => <PokemonList pokemons={pokemons} setPokemons={setPokemons} setKeyword={setKeyword} pokemonsArray={pokemonsArray} setPokemonsArray={setPokemonsArray} loadMore={loadMore} setLoadMore={setLoadMore} />} />\n        <Route exact path='/pokemon/:name' render={(props) => <PokemonDetails {...props} />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}