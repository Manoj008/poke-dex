[{"C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\index.js":"1","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\reportWebVitals.js":"2","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\App.js":"3","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\services\\Services.js":"4","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\PokemonList.js":"5","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\Pokemons.js":"6","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\PokemonDetails.js":"7","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\Evolve.js":"8","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\Ability.js":"9","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\Type.js":"10","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\Stat.js":"11","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\BarChart.js":"12","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\SearchBar.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":955,"mtime":1609104700665,"results":"17","hashOfConfig":"15"},{"size":2518,"mtime":1609157930549,"results":"18","hashOfConfig":"15"},{"size":1862,"mtime":1609161410361,"results":"19","hashOfConfig":"15"},{"size":1032,"mtime":1609161265147,"results":"20","hashOfConfig":"15"},{"size":5959,"mtime":1609161845033,"results":"21","hashOfConfig":"15"},{"size":943,"mtime":1608948869555,"results":"22","hashOfConfig":"15"},{"size":3250,"mtime":1609010481322,"results":"23","hashOfConfig":"15"},{"size":2012,"mtime":1608982627562,"results":"24","hashOfConfig":"15"},{"size":1301,"mtime":1608987751988,"results":"25","hashOfConfig":"15"},{"size":1260,"mtime":1608976084847,"results":"26","hashOfConfig":"15"},{"size":3390,"mtime":1609160877172,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"14zguyp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\index.js",[],["63","64"],"C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\reportWebVitals.js",[],"C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\App.js",["65"],"\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport PokemonList from './components/pokemon/PokemonList.js';\nimport PokemonDetails from './components/pokemon/PokemonDetails';\nimport Evolve from './components/pokemon/Evolve';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport SearchBar from './components/pokemon/SearchBar';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [keyword, setKeyword] = useState('');\n\n\n\n\n\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <Container className='App' style={{ padding: 0 }}>\n        <SearchBar keyword={keyword} setKeyword={setKeyword} />\n        <Switch>\n          <Route path='/' exact component={PokemonList} />\n          <Route path='/pokemon/:name' component={PokemonDetails} />\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\services\\Services.js",["66"],"export async function getAllPokemons(url) {\r\n    return new Promise((resolve, reject) => {\r\n        let isActive = true;\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n\r\n        return () => { isActive = false; };\r\n    });\r\n};\r\n\r\nexport async function getPokemonsData(pokemons) {\r\n    let _PokemonsData = await Promise.all(\r\n        pokemons.map(\r\n            async pokemon => {\r\n                return getPokemon(pokemon.url)\r\n            }\r\n        )\r\n    );\r\n\r\n    return _PokemonsData;\r\n\r\n};\r\n\r\nexport async function getPokemon(pokemon) {\r\n    return new Promise((resolve, reject) =>\r\n        fetch(pokemon)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n            }).catch((e) => {\r\n                resolve(404);\r\n            })\r\n    );\r\n};\r\n\r\nexport async function getSpecies(specie) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(specie)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n    });\r\n};\r\n\r\nexport async function getEvolution(path) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(path)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n    });\r\n};\r\n\r\nexport async function getEvolutionChain(chain) {\r\n    let _evoData = await Promise.all(\r\n        chain.map(\r\n            async c => {\r\n                return getPokemon('https://pokeapi.co/api/v2/pokemon/' + c.species_name)\r\n            }\r\n        )\r\n    );\r\n    return _evoData;\r\n\r\n};\r\n\r\nexport async function getAllAbilities(abilities) {\r\n    console.log(\"async call \" + abilities);\r\n    let _allAbilities = await Promise.all(\r\n        abilities.map(\r\n            async a => {\r\n                return getOneAbility(a.ability.url);\r\n            }\r\n        )\r\n    )\r\n    return _allAbilities;\r\n\r\n};\r\n\r\nasync function getOneAbility(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            }).catch((message) => {\r\n                console.log(message);\r\n            });\r\n\r\n    });\r\n};","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\PokemonList.js",[],"C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\Pokemons.js",[],"C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\PokemonDetails.js",["67","68","69"],"import { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport './Pokemons.css';\r\nimport { getPokemon, getSpecies, getEvolution, getEvolutionChain } from \"../../services/Services\";\r\nimport Evolve from './Evolve';\r\nimport Ability from './Ability';\r\nimport Type from './Type';\r\nimport Stat from './Stat';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction PokemonDetails(props) {\r\n    const [pokemon, setPokemon] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [species, setSpecies] = useState([]);\r\n    const [evolution, setEvolution] = useState([]);\r\n    const [pokeDetails, setPokeDetails] = useState('');\r\n    const [prevBtn, setPrevBtn] = useState(true);\r\n    const [failed, setFailed] = useState(false);\r\n\r\n    var history = useHistory();\r\n    const path = \"https://pokeapi.co/api/v2\" + props.location.pathname;\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        async function fetchData() {\r\n            let pokemonData = await getPokemon(path);\r\n\r\n            if (pokemonData === 404) {\r\n                setFailed(true);\r\n            } else {\r\n                setFailed(false);\r\n                setPokemon(pokemonData);\r\n                if (pokemonData.id === 1) {\r\n                    setPrevBtn(false);\r\n                }\r\n                else {\r\n                    setPrevBtn(true);\r\n                }\r\n                let spec = await getSpecies(pokemonData.species.url);\r\n                setSpecies(spec);\r\n\r\n                spec.flavor_text_entries.map((fl, index) => {\r\n                    if (fl.language.name === 'en') {\r\n                        setPokeDetails(fl.flavor_text);\r\n                    }\r\n                })\r\n                let evolve = await getEvolution(spec.evolution_chain.url);\r\n                let chain = [];\r\n                let evoData = evolve.chain;\r\n                do {\r\n                    let numberOfEvolutions = evoData['evolves_to'].length;\r\n\r\n                    chain.push({\r\n                        \"species_name\": evoData.species.name,\r\n                        \"min_level\": !evoData ? 1 : evoData.min_level,\r\n                    });\r\n\r\n                    if (numberOfEvolutions > 1) {\r\n                        for (let i = 1; i < numberOfEvolutions; i++) {\r\n                            chain.push({\r\n                                \"species_name\": evoData.evolves_to[i].species.name,\r\n                                \"min_level\": !evoData.evolves_to[i] ? 1 : evoData.evolves_to[i].min_level,\r\n\r\n                            });\r\n                        }\r\n                    }\r\n                    evoData = evoData['evolves_to'][0];\r\n                } while (!!evoData && evoData.hasOwnProperty('evolves_to'));\r\n\r\n                var e = [];\r\n                const evoChain = await getEvolutionChain(chain);\r\n                setEvolution(evoChain);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [path]);\r\n\r\n    const handlePrevSubmit = () => {\r\n        history.push('/pokemon/' + (pokemon.id - 1));\r\n    }\r\n\r\n    const handleNextSubmit = () => {\r\n        history.push('/pokemon/' + (pokemon.id + 1));\r\n    }\r\n\r\n    return (\r\n        (loading ?\r\n            <h3> Loading.. </h3> :\r\n            failed ?\r\n                <h4 className={{ margin: 'auto' }\r\n                }> No Pokemon Found For this Search</h4 > : (\r\n\r\n                    <Card style={{ backgroundColor: 'lightgray' }}>\r\n                        <Row className='no-gutters' style={{ justifyContent: 'center' }}>\r\n                            <Col>\r\n                                <Button disabled={!prevBtn} className='btn-info btn-block' onClick={handlePrevSubmit}><i className='fa fa-arrow-left'></i>{'#' + (pokemon.id - 1)}</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <h4 style={{ margin: '0.3rem 1rem 0rem', textAlign: 'center' }}> {pokemon.name.toUpperCase() + '  '}<span style={{ color: \"grey\" }}> {'#' + pokemon.id}</span> </h4>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button className='btn-info btn-block' onClick={handleNextSubmit}>{'#' + (pokemon.id + 1)}<i className='fa fa-arrow-right'></i></Button>\r\n                            </Col>\r\n                        </Row >\r\n                        <Row>\r\n                            <Col className='comp-data'>\r\n                                <Card.Img className='full-image' src={pokemon.sprites.other[\"official-artwork\"][\"front_default\"]} />\r\n                                {/* <Card.Img xs='4' className='full-image' src={pokemon.sprites.other[\"dream_world\"][\"front_default\"]} /> */}\r\n                                <Stat stats={pokemon.stats} />\r\n                            </Col >\r\n                            <Col className='comp-data'>\r\n                                <div style={{ justifyContent: 'center' }}>\r\n\r\n\r\n                                    <h6 style={{ margin: '1rem 0.5rem' }} className='poke-details'>{pokeDetails}</h6>\r\n\r\n                                    <Row style={{ justifyContent: 'center', margin: '0.5rem', backgroundColor: 'steelblue', color: 'white', borderRadius: '0.3rem' }}>\r\n                                        <h5 style={{ margin: '0.5rem auto' }}>{'Height: ' + pokemon.height}</h5>\r\n                                        <h5 style={{ margin: '0.5rem auto' }}>{'Weight: ' + pokemon.weight}</h5>\r\n                                    </Row>\r\n                                    <Ability abilities={pokemon.abilities} />\r\n                                    <Type types={pokemon.types} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row >\r\n                        <Evolve evolution={evolution} />\r\n                    </Card >\r\n                )\r\n        )\r\n    );\r\n};\r\n\r\nexport default PokemonDetails;","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\Evolve.js",[],"C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\Ability.js",["70","71","72","73","74","75","76"],"import React, { useEffect, useState } from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllAbilities } from '../../services/Services';\r\nimport './Pokemons.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nfunction Ability({ abilities }) {\r\n    const [ability, setAbility] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [summ, setSumm] = useState('');\r\n    const [eff, setEff] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchAbilities() {\r\n            const allAbilities = await getAllAbilities(abilities);\r\n            allAbilities.map((one, index) => {\r\n                let name = one.name;\r\n                let summary = '';\r\n                let effect = '';\r\n                one.flavor_text_entries.map((summ, index) => {\r\n                    if (summ.language.name === 'en') {\r\n                        summary = summ.flavor_text;\r\n                    }\r\n                });\r\n                one.effect_entries.map((det, index) => {\r\n                    if (det.language.name === 'en') {\r\n                        effect = det.effect;\r\n                    }\r\n                });\r\n\r\n                let newAbility = {\r\n                    id: name, name: name, summary: summary, effect: effect\r\n\r\n                }\r\n                setAbility(prevAbility => ([...prevAbility, newAbility]));\r\n            });\r\n        }\r\n        fetchAbilities();\r\n    }, []);\r\n\r\n    function getAbility(abilities) {\r\n\r\n        const handleClose = () => {\r\n            setShow(false);\r\n        };\r\n        const handleShow = (index) => {\r\n            console.log('in' + index);\r\n            setName(ability[index].name);\r\n            setSumm(ability[index].summary);\r\n            setEff(ability[index].effect);\r\n            setShow(true);\r\n        };\r\n\r\n        return (\r\n            abilities.map((myAbility, index) =>\r\n                <>\r\n\r\n                    <Col xs='12' sm='6' md='12' lg='6' xl='6' style={{ cursor: 'pointer' }} onClick={() => handleShow(index)}>\r\n                        <h5 className='ability-style'>{myAbility.ability.name + ' '}<i className='fa fa-info-circle' style={{ fontSize: '0.8rem' }}></i></h5>\r\n                    </Col>\r\n\r\n                    <Modal show={show} onHide={handleClose} style={{ width: '80%' }}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{name}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Header>\r\n                            <Modal.Body>{summ}</Modal.Body>\r\n                        </Modal.Header>\r\n                        <Modal.Header>\r\n                            <Modal.Body>{eff}</Modal.Body>\r\n                        </Modal.Header>\r\n                    </Modal>\r\n                </>\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4 style={{ textAlign: 'left', marginLeft: '10px' }}>Abilities</h4>\r\n            <Row className='no-gutters'>\r\n                {getAbility(abilities)}\r\n            </Row>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Ability;","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\Type.js",["77"],"import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport './Pokemons.css';\r\n\r\nfunction getType(types) {\r\n    var typeColor = {\r\n        normal: 'linear-gradient(#A4ACAF 100%,transparent)',\r\n        fighting: 'linear-gradient(#D56723 100%,transparent)',\r\n        flying: 'linear-gradient(to bottom,#3DC7EF 50%, #BDB9B8 50%)',\r\n        poison: 'linear-gradient(#B97FC9 100%,transparent)',\r\n        ground: 'linear-gradient(to bottom,#F7DE3F 50%, #AB9842 50%)',\r\n        rock: 'linear-gradient(#A38C21 100%,transparent)',\r\n        bug: 'linear-gradient(#729F3F 100%,transparent)',\r\n        ghost: 'linear-gradient(#7B62A3 100%,transparent)',\r\n        steel: 'linear-gradient(#9EB7B8 100%,transparent)',\r\n        fire: 'linear-gradient(#FD7D24 100%,transparent)',\r\n        water: 'linear-gradient(#4592C4 100%,transparent)',\r\n        grass: 'linear-gradient(#9BCC50 100%,transparent)',\r\n        electric: 'linear-gradient(#EED535 100%,transparent)',\r\n        psychic: 'linear-gradient(#F366B9 100%,transparent)',\r\n        ice: 'linear-gradient(#51C4E7 100%,transparent)',\r\n        dragon: 'linear-gradient(to bottom,#53A4CF 50%, #F16E57 50%)',\r\n        dark: 'linear-gradient(#717171 100%,transparent)',\r\n        fairy: 'linear-gradient(#FDB9E9 100%,transparent)',\r\n        unknown: 'linear-gradient(#000 100%,transparent)',\r\n        shadow: 'linear-gradient(#000 100%,transparent)'\r\n    };\r\n\r\n    return (\r\n        types.map((type, index) =>\r\n            <Col xs='6' sm='6' md='6' lg='6' xl='6'>\r\n                <h5 className='ability-style' style={{ backgroundImage: typeColor[type.type.name], color: 'white' }} key={type.type.name}>{type.type.name}</h5>\r\n            </Col>\r\n\r\n        )\r\n    );\r\n};\r\n\r\nfunction Type({ types }) {\r\n    return (\r\n        <div>\r\n            <h4 style={{ textAlign: 'left', marginLeft: '10px' }}>Type</h4>\r\n            <Row className='no-gutters'>\r\n                {getType(types)}\r\n            </Row>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Type;","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\Stat.js",["78","79"],"import { Col, Row } from \"react-bootstrap\";\r\nimport React, { useState } from 'react';\r\nimport PokemonDetails from \"./PokemonDetails\";\r\nimport './Pokemons.css';\r\nimport BarChart from './BarChart'\r\n\r\nfunction getStats(stats, data, setData) {\r\n    return (\r\n        stats.map((s, index) => {\r\n            return (\r\n\r\n                (s.stat.name !== 'special-attack' && s.stat.name !== 'special-defense') &&\r\n                (\r\n                    <>\r\n                        <Col className='stat-row'>\r\n                            {console.log(s.stat.name)}\r\n                            <h6 className='stat-col'>{s.stat.name}</h6>\r\n                            <p style={{ padding: '0rem', margin: '0rem 0rem 0.4rem' }}>{s.base_stat}</p>\r\n                        </Col >\r\n                        {/* {() => setData([s.base_stat])} */}\r\n                    </>\r\n\r\n                )\r\n            )\r\n        })\r\n        // return (\r\n        //     <BarChart data={data} />\r\n    )\r\n};\r\n\r\nfunction Stat({ stats }) {\r\n    const [data, setData] = useState([]);\r\n    // getStats(stats, data, setData);\r\n    return (\r\n        <Row className='no-gutters stat-row stat' >\r\n            {getStats(stats, data, setData)}\r\n            {/* <BarChart data={data} /> */}\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Stat;","C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\BarChart.js",[],["80","81"],"C:\\Users\\MANOJ\\Desktop\\poke-dex\\src\\components\\pokemon\\SearchBar.js",["82","83","84","85"],"import React, { useEffect, useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Shop } from 'react-bootstrap-icons';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { getAllPokemons } from '../../services/Services';\r\n\r\nfunction SearchBar({ keyword, setKeyword }) {\r\n    const [pokemonsName, setPokemonsName] = useState([]);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [search, setSearch] = useState(false);\r\n    var history = useHistory();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            let response = await getAllPokemons('https://pokeapi.co/api/v2/pokemon/?limit=1200');\r\n            let names = response.results.map(p => {\r\n                return (\r\n                    p.name\r\n                )\r\n            })\r\n            setPokemonsName(names);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [keyword]);\r\n\r\n    const onTextChangeHandler = (e) => {\r\n        const value = e.target.value;\r\n        let suggest = [];\r\n        if (value.length > 0) {\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggest = pokemonsName.sort().filter(v => regex.test(v))\r\n        }\r\n\r\n        setKeyword(value);\r\n        setSuggestions(suggest);\r\n    };\r\n\r\n    function selectedText(value) {\r\n        setKeyword('');\r\n        setSuggestions([]);\r\n        history.push('/pokemon/' + value.toLowerCase());\r\n    };\r\n\r\n\r\n\r\n\r\n    const renderSuggestions = () => {\r\n        if (suggestions.length === 0) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ul >\r\n                {\r\n                    suggestions.map((item, index) => (<li key={index} onClick={() => selectedText(item)}>{item}</li>))\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n\r\n\r\n    function cancelSearch() {\r\n\r\n        setSearch(true);\r\n        setKeyword('');\r\n        setSuggestions([]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!search && (<div className='heading-block' >\r\n                <h3 className='heading'>Welcome to Poke-dex</h3>\r\n                <i onClick={() => cancelSearch()} className='fa fa-search' style={{ fontSize: '1.5rem', marginBottom: '0.2rem', paddingBottom: '0.2rem' }}></i></div>)}\r\n            { search && (\r\n                <div className='search-bar'>\r\n                    <input\r\n                        className='searchBox'\r\n                        key=\"random1\"\r\n                        value={keyword}\r\n                        placeholder={\"Enter Rank or Name\"}\r\n                        onChange={onTextChangeHandler}\r\n                        onKeyDownCapture={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                history.push('/pokemon/' + keyword.toLowerCase());\r\n                                e.target.value = ''\r\n                            }\r\n                        }\r\n                        }\r\n                    />\r\n                    <i onClick={() => setSearch(false)} className='fa fa-close' style={{ fontSize: '1.5rem', marginBottom: '0.2rem', paddingBottom: '0.2rem' }}></i>\r\n                </div>\r\n            )}\r\n            <div className='suggest-block'>\r\n                {renderSuggestions()}\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default SearchBar;",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":12,"column":24,"nodeType":"92","messageId":"93","endLine":12,"endColumn":32},{"ruleId":"90","severity":1,"message":"95","line":15,"column":12,"nodeType":"92","messageId":"93","endLine":15,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":42,"column":58,"nodeType":"98","messageId":"99","endLine":42,"endColumn":60},{"ruleId":"90","severity":1,"message":"100","line":70,"column":21,"nodeType":"92","messageId":"93","endLine":70,"endColumn":22},{"ruleId":"90","severity":1,"message":"101","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"102","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"103","line":7,"column":17,"nodeType":"92","messageId":"93","endLine":7,"endColumn":23},{"ruleId":"96","severity":1,"message":"97","line":22,"column":43,"nodeType":"98","messageId":"99","endLine":22,"endColumn":45},{"ruleId":"96","severity":1,"message":"97","line":26,"column":59,"nodeType":"98","messageId":"99","endLine":26,"endColumn":61},{"ruleId":"96","severity":1,"message":"97","line":31,"column":53,"nodeType":"98","messageId":"99","endLine":31,"endColumn":55},{"ruleId":"104","severity":1,"message":"105","line":45,"column":8,"nodeType":"106","endLine":45,"endColumn":10,"suggestions":"107"},{"ruleId":"90","severity":1,"message":"101","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"108","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":22},{"ruleId":"90","severity":1,"message":"109","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":16},{"ruleId":"86","replacedBy":"110"},{"ruleId":"88","replacedBy":"111"},{"ruleId":"90","severity":1,"message":"112","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"113","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"102","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":14},{"ruleId":"90","severity":1,"message":"114","line":10,"column":12,"nodeType":"92","messageId":"93","endLine":10,"endColumn":19},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Evolve' is defined but never used.","Identifier","unusedVar","'isActive' is assigned a value but never used.","'species' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'e' is assigned a value but never used.","'Card' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'abilities'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'PokemonDetails' is defined but never used.","'BarChart' is defined but never used.",["115"],["116"],"'Form' is defined but never used.","'Shop' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [abilities]",{"range":"120","text":"121"},[1580,1582],"[abilities]"]